package jp.ukiba.koinu.build

import java.time.{Instant, OffsetDateTime, ZoneOffset}
import java.time.format.DateTimeFormatter

/** To be used with sbt-buildinfo */
trait SbtBuildInfo:
  // member generated by sbt-buildinfo
  val version: String

  /** UTC */ val builtAtMillis: Long

  /**
   * The build time with milliseconds and offset, e.g., `2024-07-01 13:11:47.610+0900`
   * formatted with java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSZ")
   * https://github.com/sbt/sbt-buildinfo/blob/v0.12.0/src/main/scala/sbtbuildinfo/BuildInfo.scala#L17
   */
  val builtAtString: String

  def builtAtInstant: Instant = Instant.ofEpochMilli(builtAtMillis)

  def builtAtOffsetDateTime: OffsetDateTime =
    OffsetDateTime.parse(builtAtString, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.SSSZ"))

  /** The offset of the build host */
  def builtAtOffset: ZoneOffset = builtAtOffsetDateTime.getOffset

  /** Milliseconds are usually irrelevant for the build time */
  def builtAtSecondOffsetString: String = builtAtOffsetDateTime.format(builtAtSecondOffsetFormat)

  /** RFC 3339 compatible, but not ISO 8601 because the separator is a space for human readability */
  def builtAtSecondOffsetFormat: DateTimeFormatter =
      // this is `not val` since it is typically used only once and should be garbage collected
      DateTimeFormatter.ofPattern("uuuu-MM-dd HH:mm:ssxxxxx") // `xxxxx` is a offset with colon and optional second
